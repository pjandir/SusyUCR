
  Tested from a clean checkout on Tue Aug 18 14:27:28 PDT 2015.

  If you want to do a test runthrough, you can run all of the code
  with the default arguments.

  Whether you are going to fill histograms from trees or not,
  first run step 0 to make the non-QCD inputs.

  If you don't have a complete set of trees, you can skip the steps
  that fill the QCD and signal MC input from trees and use the sample
  files by doing this:

     mkdir -p outputfiles
     cp sample-kqcd-input-qcdmc.txt outputfiles/kqcd-input-qcdmc.txt
     cp sample-finebin-input-qcdmc.txt outputfiles/finebin-input-qcdmc.txt
     cp sample-kqcd-input-sigmc-t1bbbbH.txt outputfiles/kqcd-input-sigmc-t1bbbbH.txt

  If you want to fill histograms from the MC trees,
  after making a symbolic link named "current-tree-dir" to your tree
  directory, you should be able to generate all of the inputs.

  In either case, you should be able to run the QCD likelihood fit for
  the Kqcd parameters, starting at step 7 (after doing step 0).

  All code can be loaded compiled (e.g. .L blah.c+) with the exception
  of wrapper_build_qcdlhfit_ws1.c.


===========================================================================================

  0) Make input files from other backgrounds

      make_lostlep_input_files1.c
      make_hadtau_input_files1.c
      make_znunu_input_files1.c

     Required inputs:
       non-QCD-bg-inputs/HadTauEstimation_stacked_LumiScaledTo10.0fbinv.root
       non-QCD-bg-inputs/LLPrediction_10fb_QCD.root
       non-QCD-bg-inputs/LLPrediction_10fb_QCD_inverted.root
       non-QCD-bg-inputs/znunu-HDP.txt
       non-QCD-bg-inputs/znunu-LDP.txt

     Outputs:
       outputfiles/kqcd-input-lostlep.txt
       outputfiles/kqcd-input-hadtau.txt
       outputfiles/kqcd-input-znunu.txt
       outputfiles/finebin-input-lostlep.txt
       outputfiles/finebin-input-hadtau.txt
       outputfiles/finebin-input-znunu.txt
       outputfiles/combine-input-lostlep.txt
       outputfiles/combine-input-hadtau.txt
       outputfiles/combine-input-znunu.txt

-----------------------------------------------------------
  1) Fill histograms from TreeMaker trees

     *** If you don't have trees, copy the sample files to outputfiles and skip to step 7.

      fill_bg_hists_tm4.c

     Required Inputs:
       TreeMaker trees in, all in the directory  current-tree-dir

     Outputs:
       outputfiles/fill-bg-hists-tm4.root

     Notes:
       Even though this fills BG histograms for everything, the only part that's
       used later in this workflow is the QCD histograms.

-----------------------------------------------------------
  2) Fill signal MC hists

     *** If you don't have trees, copy the sample files to outputfiles and skip to step 7.

      fill_sig_hists_tm4.c

     Required Inputs:
       TreeMaker trees in, all in the directory  current-tree-dir

     Outputs:
       outputfiles/fill-sig-hists-tm4.root

-----------------------------------------------------------
  3) Draw all-in-one BG plots

     *** If you don't have trees, copy the sample files to outputfiles and skip to step 7.

      draw_bg_hists4_allinone.c

     Required Inputs:
        fb-sb-bin-map.txt (has mapping between QCD and search binning)
        outputfiles/fill-bg-hists-tm4.root (which is output of fill_bg_hists_tm4.c)

     Outputs:
        outputfiles/fill-bg-hists-tm4-allinone-postdraw.root

     Notes:
       Even though this fills BG histograms for everything, the only part that's
       used later in this workflow is the QCD histograms.


-----------------------------------------------------------
  4) Draw all-in-one plots including signal MC.

     *** If you don't have trees, copy the sample files to outputfiles and skip to step 7.

      draw_bgsig_hists4_allinone.c

      Required Inputs:
        outputfiles/fill-bg-hists-tm4.root (which is output of fill_bg_hists_tm4.c)
        outputfiles/fill-sig-hists-tm4.root (which is output of fill_sig_hists_tm4.c)
        fb-sb-bin-map.txt (has mapping between QCD and search binning)

     Outputs:
        outputfiles/fill-sig-hists-tm4-allinone-t1bbbbH-postdraw.root

     Notes:
       Even though this makes a bunch of histograms, only the signal MC
       ones are used later.  The SMS model name can be changed.


-----------------------------------------------------------
  5) Make QCD MC input files

     *** If you don't have trees, copy the sample files to outputfiles and skip to step 7.

      make_qcdmc_input_files1.c

      Required Inputs:
        outputfiles/fill-bg-hists-tm4-allinone-postdraw.root (output of draw_bg_hists4_allinone.c)

      Outputs:
        outputfiles/kqcd-input-qcdmc.txt
        outputfiles/finebin-input-qcdmc.txt
        outputfiles/combine-input-qcdmc.txt


-----------------------------------------------------------
  6) Make a signal MC input file

     *** If you don't have trees, copy the sample files to outputfiles and skip to step 7.

      make_sigmc_input_files1.c

      Required Inputs:
        outputfiles/fill-sig-hists-tm4-allinone-t1bbbbH-postdraw.root (output of draw_bgsig_hists4_allinone.c)

      Outputs:
        outputfiles/kqcd-input-sigmc-t1bbbbH.txt
        outputfiles/combine-input-sigmc-t1bbbbH.txt


-----------------------------------------------------------
  7) Make fake data input file for QCD likelihood fit for Kqcd pars.

      make_fakedata_kqcd_input_file1.c

      Required Inputs:
          outputfiles/finebin-input-lostlep.txt (output of make_lostlep_input_files1.c)
          outputfiles/finebin-input-hadtau.txt (output of make_hadtau_input_files1.c)
          outputfiles/finebin-input-znunu.txt (output of make_znunu_input_files1.c)
          outputfiles/finebin-input-qcdmc.txt (output of make_qcdmc_input_files1.c)
          kqcd-fitconfig.txt (has Kqcd pars to be used for perfect closure of QCD, if requested)

      Outputs:
          outputfiles/kqcd-input-fakedata-perfect-qcd-closure-random-nobs.txt

      Notes:
          Can enforce perfect closure for QCD, based on Kqcd pars from kqcd-fitconfig.txt, if desired.
          Can randomize the observed counts around their Poisson means, if desired.

      Optional:
          You can make plots of all of the fit inputs with draw_inputs1.c


-----------------------------------------------------------
  8) Build a QCD likelihood fit workspace

      wrapper_build_qcdlhfit_ws1.c  (uses build_qcdlhfit_ws1.c)

      Required Inputs:
        kqcd-fitconfig.txt (has starting Kqcd par vals and constraints)
        outputfiles/kqcd-input-fakedata-perfect-qcd-closure-random-nobs.txt (output of make_fakedata_kqcd_input_file1.c)
        outputfiles/kqcd-input-lostlep.txt (output of make_lostlep_input_files1.c)
        outputfiles/kqcd-input-hadtau.txt (output of make_hadtau_input_files1.c)
        outputfiles/kqcd-input-znunu.txt (output of make_znunu_input_files1.c)
        outputfiles/kqcd-input-qcdmc.txt (output of make_qcdmc_input_files1.c)
        outputfiles/kqcd-input-sigmc-t1bbbbH.txt (output of make_sigmc_input_files1.c)

      Outputs:
        outputfiles/ws-kqcd-lhfit-perfect-qcd-closure-random-nobs-with-constraints.root

      Notes:
        Currently configured to have uncertanties within a background component (e.g. lostlep)
        100% correlated accross the bins.


-----------------------------------------------------------
  9) Run the fit

      run_qcdlhfit1.c

      Required Inputs:
        outputfiles/ws-kqcd-lhfit-perfect-qcd-closure-random-nobs-with-constraints.root (output of wrapper_build_qcdlhfit_ws1.c)

      Outputs:
        Lots of plots and tables in outputfiles/qcdlhfit-results-X, where X is the same as the ws file name
        without the .root extension, so it would be
        outputfiles/qcdlhfit-results-ws-kqcd-lhfit-perfect-qcd-closure-random-nobs-with-constraints
        for the example ws file above.
        In particular, see qcdlhfit-plots.pdf in the output directory.


-----------------------------------------------------------
 10) Compute BG estimates in search bins from fit results

      gen_combine_table5.c

      Required Inputs:
        outputfiles/qcdlhfit-results-ws-kqcd-lhfit-perfect-qcd-closure-random-nobs-with-constraints/kqcd-parameter-fit-results.txt
        outputfiles/finebin-input-fakedata-perfect-qcd-closure-random-nobs.txt
        outputfiles/finebin-input-lostlep.txt
        outputfiles/finebin-input-hadtau.txt
        outputfiles/finebin-input-znunu.txt

      Outputs:
        Plots and text to the screen.  Will add latex output later.



-----------------------------------------------------------
  11)  Generate toy fake dataset txt and ws files, fit them, and plot results

      make_toy_fakedata_kqcd_input_files1.c
      make_toy_fakedata_kqcd_ws_files1.c
      run_toy_qcdlhfits1.c
      draw_toy_pull_plots1.c



